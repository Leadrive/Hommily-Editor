import React, { Component } from 'react'

const styles = {
	container: {
		backgroundColor: 'rgba(255, 255, 255, 0.9)',
		//border: '1px solid rgba(204, 204, 204, 0.5);',
		borderRadius: 5,
	},
	iconContainer: {
		display: 'inline-block',
    height: 24,
    width: 24,
    cursor: 'pointer',
	},
	selectedIconContainer: {

	},
}


const iconFill = '#A3A3A4',
  selectedIconFill = '#6b9aa3'



export default class PopoverControl extends Component {

	static propTypes = {
		style: React.PropTypes.object,
		toggleInlineStyle: React.PropTypes.func,
		currentInlineStyle: React.PropTypes.object,
		toggleBlockType: React.PropTypes.func,
		selectedBlockType: React.PropTypes.string,
	};

	toggleInlineStyle = (style) => {
		if (this.props.toggleInlineStyle)
			this.props.toggleInlineStyle(style)
	};

	toggleBlockType = (blockType) => {
		if (this.props.toggleBlockType)
			this.props.toggleBlockType(blockType)
	};
	render = () => {
		 editorToggleInlineStyle =  this.toggleInlineStyle;
		 editorSelectedBlockType =this.toggleBlockType;
		 editorCurrentInlineStyle = (style) =>{
            return this.props.currentInlineStyle 
						&& this.props.currentInlineStyle.has(style) 
						? true :false;
		 }
		 editorSelectedBlockStyle = (style) =>{
           return this.props.selectedBlockType == style 
							? true : false;
		 }
		return <div
			style={Object.assign({}, styles.container, this.props.style)}
		>
			<div
				style={Object.assign({}, 
					styles.iconContainer,
					this.props.currentInlineStyle 
						&& this.props.currentInlineStyle.has('BOLD') 
						? styles.selectedIconContainer : null,
				)}
				onMouseDown={(e) => {
					e.preventDefault()
				 this.toggleInlineStyle('BOLD')
				}}
			>
				<svg fill={this.props.currentInlineStyle 
						&& this.props.currentInlineStyle.has('BOLD') 
						? selectedIconFill : iconFill} height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg">
						<g  fill-rule="evenodd">
						 <path  d="M786.8,689.963l0.016-.865q0.149-.033.791-0.147a5.352,5.352,0,0,0,.973-0.245,1.659,1.659,0,0,0,.115-0.244,1.149,1.149,0,0,0,.066-0.311,0.97,0.97,0,0,1,.066-0.293,0.674,0.674,0,0,0,.017-0.343,0.7,0.7,0,0,1,0-.31v-0.588a91.293,91.293,0,0,0-.2-9.335,0.284,0.284,0,0,0-.2-0.131c-0.11-.033-0.247-0.065-0.413-0.1a3.843,3.843,0,0,0-.46-0.065c-0.144-.011-0.293-0.027-0.446-0.049s-0.246-.033-0.28-0.033l-0.033-.751q0.906-.015,3.132-0.1t3.428-.081h1.253a6.807,6.807,0,0,1,1.253.114,4.725,4.725,0,0,1,1.187.392,4.405,4.405,0,0,1,.989.636,2.677,2.677,0,0,1,.676.963,3.069,3.069,0,0,1,.264,1.241,2.558,2.558,0,0,1-.149.881,2.041,2.041,0,0,1-.363.653,3.64,3.64,0,0,1-.593.522,3.69,3.69,0,0,1-.676.408c-0.2.087-.455,0.207-0.774,0.359a5.048,5.048,0,0,1,2.373,1.224,2.927,2.927,0,0,1,.94,2.269,3.937,3.937,0,0,1-.33,1.632,3.375,3.375,0,0,1-.857,1.192,4.692,4.692,0,0,1-1.269.767,6.974,6.974,0,0,1-1.5.44,9.505,9.505,0,0,1-1.614.131c-0.275,0-.683-0.011-1.22-0.033s-0.946-.027-1.22-0.016q-0.974,0-2.819.1Zm4.977-8.111a6.253,6.253,0,0,0,1.006.065,6.618,6.618,0,0,0,1.319-.115,2.833,2.833,0,0,0,1-.407,1.836,1.836,0,0,0,.676-0.817,3.364,3.364,0,0,0,.248-1.289,2.244,2.244,0,0,0-.264-1.11,1.96,1.96,0,0,0-.742-0.751,3.494,3.494,0,0,0-.989-0.391,5.943,5.943,0,0,0-1.138-.131,8.268,8.268,0,0,0-1.2.114q0,0.458.049,1.371c0.032,0.61.044,1.072,0.032,1.388v0.734q0,0.49-.016.718Q791.758,681.656,791.774,681.852Zm0.133,6.806a3.241,3.241,0,0,0,1.285.293q3.462,0,3.463-3.052a3.078,3.078,0,0,0-.381-1.648,2.82,2.82,0,0,0-.577-0.669,3.456,3.456,0,0,0-.609-0.425,2.588,2.588,0,0,0-.742-0.228,6.454,6.454,0,0,0-.775-0.1c-0.208-.011-0.5-0.017-0.873-0.017a3,3,0,0,0-.924.1v1.437q0,0.963-.016,1.452v1.485q0,0.344.034,0.768A1.887,1.887,0,0,0,791.907,688.658Z" transform="translate(-781.265 -670.969)"/>	
						</g></svg>
			</div>
			<div
				style={Object.assign({}, 
					styles.iconContainer,
					this.props.currentInlineStyle 
						&& this.props.currentInlineStyle.has('ITALIC') 
						? styles.selectedIconContainer : null,
				)}
				onMouseDown={(e) => {
					e.preventDefault()
					this.toggleInlineStyle('ITALIC')
				}}
			>
				<svg fill={this.props.currentInlineStyle 
						&& this.props.currentInlineStyle.has('ITALIC') 
						? selectedIconFill : iconFill} height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg">
			    <g  fill-rule="evenodd" >
			    <path  d="M818.5,699.165l-0.868.065c-0.411.032-.766,0.053-1.06,0.064s-0.585.017-.871,0.017c-0.105,0-.213,0-0.324,0q-0.348,0-.736-0.021l-1.327-.064c-0.506-.021-0.86-0.043-1.059-0.065l-0.158.932a1.9,1.9,0,0,0,.5.047,2.667,2.667,0,0,1,.618.066,1.868,1.868,0,0,1,.473.176v0.225q0,0.321-.459,2.65t-1,4.868l-0.553,2.6a1.987,1.987,0,0,1-.364.9,5.483,5.483,0,0,1-.981.338l-0.711.193-0.156.754q0.272-.015,1.072-0.1c0.538-.055.954-0.081,1.25-0.081q0.6,0,1.818.016a4.558,4.558,0,0,1,.76.1,4.827,4.827,0,0,0,.774.1c0.063,0,.159-0.006.286-0.016s0.22-.016.284-0.016a6.737,6.737,0,0,0,.142-0.883q-1.486-.242-1.628-0.289l-0.017-.161a3.316,3.316,0,0,1,.063-0.514l0.144-.739L814.71,709q0.141-.738.68-3.18t0.774-3.759c0.021-.1.042-0.225,0.063-0.386s0.044-.3.063-0.4l0.079-.371a1.833,1.833,0,0,1,.127-0.369,6.006,6.006,0,0,1,.948-0.3c0.422-.107.722-0.191,0.9-0.257a4.415,4.415,0,0,0,.158-0.8m-9.026,13.751h0v0.016l0-.016m9.026-13.751h0" transform="translate(-801.985 -694.047)"/>
			    </g></svg>
			</div>
			<div
				style={Object.assign({}, 
						styles.iconContainer,
						this.props.selectedBlockType == 'header-two' 
							? styles.selectedIconContainer : null,
					)}
					onMouseDown={(e) => {
						e.preventDefault()
						this.toggleBlockType('header-two')
					}}
			>
				<svg fill={this.props.selectedBlockType == 'header-two' 
							? selectedIconFill: iconFill} height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg">
			    <g  fill-rule="evenodd" >
			     <path d="M842.484,698.986c-0.258,0-.644.01-1.161,0.033s-0.9.033-1.153,0.033-0.648-.011-1.185-0.033-0.936-.033-1.194-0.033a0.4,0.4,0,0,0-.339.212,0.828,0.828,0,0,0-.112.424,0.442,0.442,0,0,0,.224.457,1.728,1.728,0,0,0,.6.114,1.177,1.177,0,0,1,.533.114,2.007,2.007,0,0,1,.306,1.467v2.9a2.281,2.281,0,0,1-.015.293,1.315,1.315,0,0,1-.34.032h-6.291A1.382,1.382,0,0,1,832,704.97l-0.016-3.2a2.007,2.007,0,0,1,.306-1.467,1.084,1.084,0,0,1,.387-0.114,3.365,3.365,0,0,1,.452-0.033,0.5,0.5,0,0,0,.354-0.131,0.518,0.518,0,0,0,.146-0.407,0.9,0.9,0,0,0-.113-0.424,0.363,0.363,0,0,0-.34-0.212c-0.235,0-.611.01-1.127,0.033s-0.9.033-1.162,0.033-0.666-.011-1.226-0.033-0.978-.033-1.258-0.033a0.363,0.363,0,0,0-.322.212,0.953,0.953,0,0,0-.1.424,0.417,0.417,0,0,0,.162.424,0.935,0.935,0,0,0,.371.114l0.468,0.033a0.859,0.859,0,0,1,.4.1,0.205,0.205,0,0,1,.147.163,2.736,2.736,0,0,1,.1.293c0.021,0.088.043,0.2,0.064,0.327a2.244,2.244,0,0,1,.033.391,3.137,3.137,0,0,0,.016.343,1.944,1.944,0,0,1,0,.342l-0.016.228v7.4l0.016,0.5a1.775,1.775,0,0,1-.292,1.3,0.778,0.778,0,0,1-.385.147q-0.243.031-.42,0.066a0.657,0.657,0,0,0-.323.162,0.527,0.527,0,0,0-.145.408,0.811,0.811,0,0,0,.113.408,0.355,0.355,0,0,0,.323.2q0.387,0,1.144-.032t1.154-.033q0.394,0,1.234.033t1.258,0.032a0.392,0.392,0,0,0,.322-0.211,0.831,0.831,0,0,0,.113-0.424,0.564,0.564,0,0,0-.177-0.425,0.625,0.625,0,0,0-.4-0.13,4.353,4.353,0,0,1-.517-0.032,1.173,1.173,0,0,1-.419-0.114,1.963,1.963,0,0,1-.338-1.5L832,706.487a1.4,1.4,0,0,1,.468-0.049h6.064a1.343,1.343,0,0,1,.453.049,1.864,1.864,0,0,1,.015.276v3.555a0.941,0.941,0,0,1-.694,1.418,1.932,1.932,0,0,1-.466.066,0.478,0.478,0,0,0-.356.147,0.572,0.572,0,0,0-.144.423,0.8,0.8,0,0,0,.112.408,0.367,0.367,0,0,0,.339.2q0.4,0,1.194-.032c0.525-.022.924-0.033,1.193-0.033s0.666,0.011,1.194.033,0.924,0.032,1.192.032a0.366,0.366,0,0,0,.324-0.211,0.988,0.988,0,0,0,.1-0.441,0.51,0.51,0,0,0-.16-0.391,0.78,0.78,0,0,0-.371-0.147c-0.152-.021-0.313-0.039-0.485-0.049a0.806,0.806,0,0,1-.4-0.114,1.615,1.615,0,0,1-.307-1.272l-0.017-8.576a1.96,1.96,0,0,1,.324-1.467,0.844,0.844,0,0,1,.385-0.114,4.029,4.029,0,0,1,.468-0.033,0.549,0.549,0,0,0,.356-0.131,0.489,0.489,0,0,0,.162-0.407,0.91,0.91,0,0,0-.113-0.424,0.366,0.366,0,0,0-.34-0.212" transform="translate(-823.469 -693.985)"/>
			    </g></svg>
			</div>
			<div
				style={Object.assign({}, 
						styles.iconContainer,
						this.props.selectedBlockType == 'unordered-list-item' 
							? styles.selectedIconContainer : null,
					)}
					onMouseDown={(e) => {
						e.preventDefault()
						this.toggleBlockType('unordered-list-item')
					}}
			>
				<svg fill={this.props.selectedBlockType == 'unordered-list-item' 
							? selectedIconFill: iconFill} height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg">
			    <g  fill-rule="evenodd" >
			      <path d="M893.6,677.406H882.736l-0.209.081-0.08.216v1.765l0.08,0.2,0.209,0.1H893.6l0.208-.1,0.08-.2V677.7l-0.08-.216-0.208-.081m-14.021,4.123a1.635,1.635,0,0,0-1.218.512,1.831,1.831,0,0,0,0,2.508,1.707,1.707,0,0,0,2.436,0,1.831,1.831,0,0,0,0-2.508,1.635,1.635,0,0,0-1.218-.512m14.021,0.6H882.736l-0.209.082-0.08.2v1.782l0.08,0.2,0.209,0.083H893.6l0.208-.083,0.08-.2V682.4l-0.08-.2-0.208-.082m-13.978,4.122h-0.043a1.721,1.721,0,0,0-1.218.511,1.831,1.831,0,0,0,0,2.508,1.726,1.726,0,0,0,1.218.512h0.043a1.556,1.556,0,0,0,1.175-.512,1.831,1.831,0,0,0,0-2.508,1.555,1.555,0,0,0-1.175-.512m13.978,0.579H882.736l-0.209.1-0.08.2v1.765l0.08,0.214,0.209,0.083H893.6l0.208-.083,0.08-.214v-1.765l-0.08-.2-0.208-.1m-14.021-10.013a1.631,1.631,0,0,0-1.218.512,1.831,1.831,0,0,0,0,2.508,1.712,1.712,0,0,0,2.436,0,1.831,1.831,0,0,0,0-2.508,1.631,1.631,0,0,0-1.218-.512" transform="translate(-873.875 -671.297)"/>
			    </g></svg>
			</div>
			<div
				style={Object.assign({}, 
						styles.iconContainer,
						this.props.selectedBlockType == 'ordered-list-item' 
							? styles.selectedIconContainer : null,
					)}
					onMouseDown={(e) => {
						e.preventDefault()
						this.toggleBlockType('ordered-list-item')
					}}
			>
				<svg fill={this.props.selectedBlockType == 'ordered-list-item' 
							? selectedIconFill: iconFill} height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg">
			    <g  fill-rule="evenodd" >
			      <path  d="M918.694,677.177h-10.94l-0.211.08-0.081.209v1.721l0.081,0.194,0.211,0.1h10.94l0.21-.1,0.081-.194v-1.721l-0.081-.209-0.21-.08m-14.055,3.444a1.834,1.834,0,0,0-.953.257,1.583,1.583,0,0,0-.645.708l0.757,0.531a0.9,0.9,0,0,1,.726-0.514l0.046,0a0.46,0.46,0,0,1,.31.114,0.45,0.45,0,0,1,.145.353,0.886,0.886,0,0,1-.226.4,2.2,2.2,0,0,1-.5.385,4,4,0,0,0-.6.435,2.63,2.63,0,0,0-.5.612,1.553,1.553,0,0,0-.228.837,2.657,2.657,0,0,0,.066.483h3.26v-1.433h-0.953v0.547H904.2a0.725,0.725,0,0,1,.322-0.483,5.366,5.366,0,0,1,.679-0.45,2.4,2.4,0,0,0,.678-0.58,1.26,1.26,0,0,0,.307-0.821,1.24,1.24,0,0,0-.452-1.013,1.677,1.677,0,0,0-1.1-.37m14.055,1.158h-10.94l-0.211.081-0.081.193v1.738l0.081,0.194,0.211,0.079h10.94l0.21-.079,0.081-.194v-1.738l-0.081-.193-0.21-.081m0,4.588h-10.94l-0.211.079-0.081.21v1.723l0.081,0.209,0.211,0.08h10.94l0.21-.08,0.081-.209v-1.723l-0.081-.193-0.21-.1m-12.555,0h-3v1.368h0.952v-0.483c0.049,0,.11.007,0.182,0.007s0.157,0,.253-0.007c0.194-.011.341-0.016,0.437-0.016v0.016a1.938,1.938,0,0,0-.322.337l-0.388.5c-0.151.194-.247,0.323-0.29,0.387l0.226,0.5c0.065,0,.126-0.006.184-0.006q0.766,0,.767.5a0.434,0.434,0,0,1-.193.387,0.8,0.8,0,0,1-.451.129,1.433,1.433,0,0,1-.969-0.4l-0.5.789a2.065,2.065,0,0,0,1.549.6,1.95,1.95,0,0,0,1.212-.419,1.364,1.364,0,0,0,.5-1.126,1.213,1.213,0,0,0-.275-0.789,1.241,1.241,0,0,0-.726-0.435l0.856-1.045v-0.789m-0.807-11.413h-0.951l-1.227,1.144,0.644,0.675a2.015,2.015,0,0,0,.453-0.482h0.015V676.4c-0.009.226-.015,0.585-0.015,1.079v1.1h-0.969v0.9H906.3v-0.9h-0.969v-3.623" transform="translate(-898.985 -670.969)"/>
			    </g></svg>
			</div>
			<div
				style={styles.iconContainer}
				onMouseDown={(e) => {
					e.preventDefault()
					this.toggleInlineStyle('LINK')
				}}
			>
				<svg fill="#A3A3A4" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg">
			    <g >
			     <path  d="M931.848,687.089a0.9,0.9,0,0,1-.633-0.246l-1.349-1.332a0.864,0.864,0,0,1-.245-0.607,0.851,0.851,0,0,1,.245-0.625l1.909-1.907a0.867,0.867,0,0,1,.64-0.263,0.822,0.822,0,0,1,.64.295l-0.36.362-0.149.181-0.115.23-0.033.247a0.826,0.826,0,0,0,.263.625,0.943,0.943,0,0,0,.624.262l0.248-.032,0.23-.115,0.181-.149,0.361-.361a0.858,0.858,0,0,1,.312.657,0.82,0.82,0,0,1-.262.625l-1.89,1.907a0.839,0.839,0,0,1-.617.246m4.512-7.989a0.914,0.914,0,0,1-.049-1.3l1.89-1.889a0.851,0.851,0,0,1,.624-0.263,0.875,0.875,0,0,1,.624.245l1.349,1.348a0.8,0.8,0,0,1,.263.609,0.855,0.855,0,0,1-.263.625l-1.907,1.9a0.845,0.845,0,0,1-.624.248,0.9,0.9,0,0,1-.658-0.28l0.378-.378,0.132-.165,0.115-.23a0.943,0.943,0,0,0,.033-0.262,0.883,0.883,0,0,0-.248-0.625,0.763,0.763,0,0,0-.586-0.248H937.4a0.953,0.953,0,0,0-.263.034l-0.23.115-0.163.131-0.379.377m2.465-5.209a2.548,2.548,0,0,0-1.873.772l-1.875,1.907a2.517,2.517,0,0,0-.772,1.873,2.572,2.572,0,0,0,.805,1.907l-0.805.8a2.66,2.66,0,0,0-3.78-.033l-1.907,1.907a2.555,2.555,0,0,0-.772,1.875,2.469,2.469,0,0,0,.789,1.857l1.348,1.33a2.618,2.618,0,0,0,3.73-.015l1.89-1.89a2.68,2.68,0,0,0-.048-3.782l0.805-.8a2.66,2.66,0,0,0,3.779.032l1.909-1.907a2.551,2.551,0,0,0,.771-1.873,2.5,2.5,0,0,0-.771-1.857l-1.349-1.349a2.578,2.578,0,0,0-1.874-.755" transform="translate(-923.329 -669.39)"/>
			    </g></svg>
			</div>
		</div>
	}
}
